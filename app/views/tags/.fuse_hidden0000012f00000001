<div class="tagging-group">
  <label>Tags</label> (<em>Press enter to create tag</em>)
  <div class="input-group">
    <input id="tag-input" type="text" class="span2 form-control"/>
    <span id="tag-submit" class="input-group-addon">
      <i class="glyphicon glyphicon-plus"></i>
    </span>
  </div>

  <div class="alert-danger danger">
    Tag already exists!
  </div>

  <br/>
  
  <ul class="tag-list" id="tags">
    <li>No tags...</li>
  </ul>

</div>

<script>
  'use strict';
  var _tagStore = [],
      _set = {},
      tags = document.querySelector('#tags'),
      d = document.querySelector('#tag-submit'),
      input = document.querySelector("input#tag-input.span2.form-control");

  var linkedNode = function (val) {
    this.val = val;
    this.next = next;
    this.prev = prev;
  };

  var Tag = function(name) {
    this.name = name;
  };

  var _updateTags = function () {
    var tags = document.querySelector('#tags'), 
        newTags = '', i;

    for (i = 0; i < _tagStore.length; i++) {
      if (typeof _tagStore[i] !== 'undefined') {
        newTags +=  '<li class="tag">#' + 
                    _tagStore[i].name + 
                    '  <span class="delete-tag">X</span>' +
                    '</li>';
      }
    }

    if (newTags.length === 0) newTags += '<li>No tags...</li>';

    tags.innerHTML = newTags;
  };

  var _find = function (key) {
    for (var i = 0; i < _tagStore.length; i++) {
      if (_tagStore[i] && _tagStore[i].name === key)
        return i; 
    }
    return -1;
  };

  var _deleteTag = function (name) {
    delete _tagStore[_find(name)];
    delete _set[name];
  };

  var alert = function () {
    var danger = document.querySelector('.danger');
    danger.style.display = 'block';
    setTimeout(function() {
      danger.style.display = 'none';
    }, 1000);
  };

  var addTag = function () {
    var i = document.querySelector('#tag-input');
    
    var tag = new Tag(i.value);
    if (typeof _set[i.value] === 'undefined') {
      _set[i.value] = true;
      _tagStore.push(tag);
      i.value = '';
      _updateTags();
    } else {
      alert();
    }
  };

  // Event listeners
  tags.addEventListener('click', function (e) {
    e.preventDefault();
    if (e.target.className == 'delete-tag') {
      var text = e.target.parentNode.textContent;
      _deleteTag(text.slice(1, text.length - 3));
      _updateTags();
    }
  }, false);

  d.addEventListener('click', function (e) {
    // console.log(e);
    e.preventDefault();
    // console.log("ww");
    addTag();
  }, false);

  // input.addEventListener('keypress', function (e) {
  //   e.preventDefault();
  //   console.log("keypress")
  //   if (e.keyCode === 13)
  //     addTag();
  // }, false);

  input.addEventListener('keypress', function (e) {
    // console.log(e)
    if (e.keyCode === 13) {
      e.preventDefault();
      addTag();
    }
  }, false);
</script>